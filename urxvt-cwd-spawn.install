post_install() {
  printf "$cwdspawn\n"
}

post_upgrade() {
  post_install
}

read -d '' cwdspawn <<'EOF'
urxvt-cwd-spawn
===============

1) Adjust your .Xresources config

    URxvt*perl-ext-common: cwd-spawn
    URxvt*keysym.M-o: perl:cwd-spawn

2) adjust your shell config to include these functions
   (known to work with zsh/bash/ksh)

    cwd_to_urxvt() {
        local update="\0033]777;cwd-spawn;path;$PWD\0007"

        case $TERM in
        screen*)
        # pass through to parent terminal emulator
            update="\0033P$update\0033\\";;
        esac

        echo -ne "$update"
    }

    cwd_to_urxvt # execute upon startup to set initial directory

    ssh_connection_to_urxvt() {
        # don't propagate information to urxvt if ssh is used non-interactive
        [ -t 0 ] || [ -t 1 ] || return

        local update="\0033]777;cwd-spawn;ssh;$1\0007"

        case $TERM in
        screen*)
        # pass through to parent terminal emulator
            update="\0033P$update\0033\\";;
        esac

        echo -ne "$update"
    }

3) adjust .ssh/config

    Host *
        PermitLocalCommand yes
        LocalCommand ssh_connection_to_urxvt "%r %h %p"

4) execute cwd_to_urxvt each time you change your directory.

    # zsh supports hooks which execute each time you change your cwd:
    chpwd_functions=(${chpwd_functions} cwd_to_urxvt)

Support for other shells are left as an exercise for the reader ;-)
EOF
